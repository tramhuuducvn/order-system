name: "Build & Push image to DockerHub"

on:
  # push:
  #   branches:
  #     - "**"
  # pull_request:
  #   branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  
jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      upload-artifact: true
  
  push:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: List Item
        run: |
          cd order-service && ls && cd ../
          cd delivery-service && ls && cd ../
          cd inventory-service && ls && cd ../

      - name: Download Jar Artifact
        uses: actions/download-artifact@v3
        with:
          name: order-system

      - name: List Item After Download
        run: |
          cd order-service/target && ls && cd ../../
          cd delivery-service/target && ls && cd ../../
          cd inventory-service/target && ls && cd ../../

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Build & Push Order Service to DockerHub
        uses: docker/build-push-action@v3
        with: 
          context: ./order-service
          push: true
          tags: tramhuuducvn/order-service-img
      
      - name: Deploy Order Service
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp up \
            --name "order-service-application" \
            --resource-group "order-system" \
            --location "East US 2" \
            --environment "order-sys-environment" \
            --artifact "./order-service/target/order-service.jar" \
            --subscription "${{secrets.AZURE_SUBSCRIPTION_ID}}" \
            --env-vars "DATABASE_NAME=order-sys-cosmosdb-account" "DATABASE_URL=${{secrets.DATABASE_URL}}" "AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING=${{secrets.AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING}}"
      
      - name: Build & Push Inventory Service to DockerHub
        uses: docker/build-push-action@v3
        with: 
          context: ./inventory-service
          push: true
          tags: tramhuuducvn/inventory-service-img

      - name: Deploy Inventory Service
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp up \
            --name "order-service-application" \
            --resource-group "order-system" \
            --location "East US 2" \
            --environment "order-sys-environment" \
            --artifact "./order-service/target/order-service.jar" \
            --subscription "${{secrets.AZURE_SUBSCRIPTION_ID}}" \
            --env-vars "DATABASE_NAME=order-sys-cosmosdb-account" "DATABASE_URL=${{secrets.DATABASE_URL}}" "AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING=${{secrets.AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING}}" "AZURE_SERVICEBUS_NAMESPACE=ordersyssvcbusnamespace" "AZURE_SERVICEBUS_QUEUE_NAME=inventory_queue"

      - name: Build & Push Delivery to DockerHub
        uses: docker/build-push-action@v3
        with: 
          context: ./delivery-service
          push: true
          tags: tramhuuducvn/delivery-service-img

      - name: Deploy Delivery Service
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp up \
            --name "order-service-application" \
            --resource-group "order-system" \
            --location "East US 2" \
            --environment "order-sys-environment" \
            --artifact "./order-service/target/order-service.jar" \
            --subscription "${{secrets.AZURE_SUBSCRIPTION_ID}}" \
            --env-vars "DATABASE_NAME=order-sys-cosmosdb-account" "DATABASE_URL=${{secrets.DATABASE_URL}}" "AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING=${{secrets.AZURE_SERVICEBUS_NAMESPACE_CONNECTION_STRING}}" "AZURE_SERVICEBUS_NAMESPACE=ordersyssvcbusnamespace" "AZURE_SERVICEBUS_QUEUE_NAME=delivery_queue"
  
  
  
